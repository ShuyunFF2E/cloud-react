{
  "extends": ["airbnb"],
  "plugins": ["prettier", "jest"],
  "settings": {
    "import/resolver": {
      "alias": {
        "map": [
          ["@utils", "./src/utils"],
          ["@contexts", "./src/contexts"],
          ["@components", "./src/components"]
        ],
        "extensions": [".js"]
      }
    }
  },
  "rules": {
    "prefer-regex-literals": "off",
    "prefer-object-spread": 0,
    "react/jsx-props-no-spreading": 0,
    "react/destructuring-assignment": 0,
    "react/static-property-placement": 0,
    "react/forbid-prop-types": "off",
    // jsx 中属性全部使用双引
    "jsx-a11y/label-has-associated-control": "off",
    "jest/no-disabled-tests": "warn",
    "jest/no-focused-tests": "error",
    "jest/no-identical-title": "error",
    "jest/prefer-to-have-length": "warn",
    "jest/valid-expect": "error",

    "arrow-parens": "off",
    "no-mixed-operators": "off",
    "no-else-return": 0,
    "no-confusing-arrow": 0,
    "react/jsx-quotes": 0,
    "react/jsx-pascal-case": 0,
    "react/sort-comp": "off",
    "generator-star-spacing": 0, // Disable for now, there is still issue of this rule in eslint
    "react/forbid-elements": [1, { "forbid": [] }],

    //// -----
    "no-unused-vars": ["error", { "vars": "all" }],
    "indent": ["error", 2, { "SwitchCase": 1 }],

    "react/jsx-no-target-blank": "error",

    // common
    "semi": ["error", "always"],
    "spaced-comment": ["error", "always"],
    "no-multi-spaces": "error",
    "no-unused-expressions": ["error", { "allowShortCircuit": true, "allowTernary": true }],
    "no-param-reassign": ["error", { "props": true }],
    "no-return-assign": "error",
    "max-len": ["error", { "code": 140, "comments": 140 }],
    "quote-props": ["error", "as-needed"],
    "eqeqeq": "error",
    "new-cap": "error",
    "camelcase": ["error", { "ignoreDestructuring": true }],
    "jsx-quotes": ["error", "prefer-double"],
    "object-curly-spacing": ["error", "always", { "arraysInObjects": true }],
    "comma-spacing": ["error", { "before": false, "after": true }],
    "arrow-spacing": ["error", { "before": true, "after": true }],
		"lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
		"template-curly-spacing": ["error", "never"],
		"space-infix-ops": ["error"],
		"arrow-body-style": ["error", "as-needed"],
		"no-undef": "error",
		"no-multi-assign": "error",
		"no-nested-ternary": "error",
		"no-lonely-if": "error",
		"no-unneeded-ternary": "error",
		"no-case-declarations": "error",
		"object-curly-newline": "off",
		"array-bracket-spacing": "off",
		"space-before-function-paren": "error",
    "space-before-blocks": ["error", { "functions": "always", "keywords": "always", "classes": "always" }],
    "no-underscore-dangle": "off",
    "global-require": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "jsx-a11y/click-events-have-key-events": "off",

    // import (eslint-plugin-import required)
    "import/imports-first": ["error", "absolute-first"],
    "import/newline-after-import": ["error", { "count": 1 }],
    "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
    "import/prefer-default-export": "off",
    "import/no-unresolved": "off",
    "import/extensions": "off",

    // react (eslint-plugin-react required)
    "react/jsx-filename-extension": ["error", { "extensions": [".js", ".jsx"] }],
    "react/jsx-no-duplicate-props": ["error"],
    "react/jsx-indent-props": ["error", 2],
    "react/jsx-indent": ["error", 2],
    "react/jsx-first-prop-new-line": [ "error", "multiline" ],
    "react/prop-types": "off",
    "react/no-children-prop": "off",

    "react/no-string-refs": "off", // close temporally
    "react/no-array-index-key": "error",
    "react/jsx-boolean-value": "error",
    "react/no-deprecated": "warn",
    "react/require-default-props": "off",
    "react/jsx-wrap-multilines": "off"
  },
  "globals": {
    "window": true,
    "document": true,
    "localStorage": true,
    "FormData": true,
    "FileReader": true,
    "Blob": true,
    "XMLHttpRequest": true,
    "navigator": true
  },
  "env": {
    "jest/globals": true
  },
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "ecmaFeatures": {
      "legacyDecorators": true
    }
  }
}
